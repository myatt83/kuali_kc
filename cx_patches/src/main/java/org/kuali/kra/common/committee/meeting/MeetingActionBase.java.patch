diff --git a/src/main/java/org/kuali/kra/common/committee/meeting/MeetingActionBase.java b/src/main/java/org/kuali/kra/common/committee/meeting/MeetingActionBase.java
index e99ec9d..def10c7 100644
--- a/coeus-impl/src/main/java/org/kuali/coeus/common/committee/impl/meeting/MeetingActionBase.java
+++ b/coeus-impl/src/main/java/org/kuali/coeus/common/committee/impl/meeting/MeetingActionBase.java
@@ -40,6 +40,7 @@ import org.kuali.rice.krad.util.KRADConstants;
 
 import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletResponse;
+
 import java.util.*;
 
 /**
@@ -48,6 +49,8 @@ import java.util.*;
  * KraTransactionalDocumentActionBase.
  */
 public abstract class MeetingActionBase extends KualiAction {
+  private static final org.apache.log4j.Logger LOG = org.apache.log4j.Logger.getLogger(MeetingActionBase.class);
+  
   private static final String CLOSE_QUESTION = "Would you like to save meeting data before close it ?";
 
     private static final String CLOSE_QUESTION_ID = "meeting.close.question";
@@ -173,8 +176,14 @@ public abstract class MeetingActionBase extends KualiAction {
         getDictionaryValidationService().validateBusinessObject(meetingHelper.getCommitteeSchedule());
         GlobalVariables.getMessageMap().removeFromErrorPath(COMMITTEE_SCHEDULE_ERROR_PATH);
         boolean valid = GlobalVariables.getMessageMap().hasNoErrors();
+        try {
           valid &= applyRules(new MeetingSaveEvent(Constants.EMPTY_STRING, getCommitteeDocument(meetingHelper.getCommitteeSchedule()
                   .getParentCommittee().getCommitteeDocument().getDocumentHeader().getDocumentNumber()), meetingHelper, ErrorType.HARDERROR));
+        } catch (NullPointerException e) {
+          // NPE When Accessing Meeting Actions Tab on IRB Schedule
+          // https://github.com/rSmart/issues/issues/449
+          LOG.warn("Possible behavior change; not changing value of `valid` variable. It remains: " + valid);
+        }
         return valid;
 
     }
