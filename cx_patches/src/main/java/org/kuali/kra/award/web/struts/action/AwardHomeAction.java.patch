diff --git a/src/main/java/org/kuali/kra/award/web/struts/action/AwardHomeAction.java b/src/main/java/org/kuali/kra/award/web/struts/action/AwardHomeAction.java
index c944664..68c4433 100644
--- a/coeus-impl/src/main/java/org/kuali/kra/award/web/struts/action/AwardHomeAction.java
+++ b/coeus-impl/src/main/java/org/kuali/kra/award/web/struts/action/AwardHomeAction.java
@@ -47,6 +47,7 @@ import org.kuali.rice.krad.util.KRADConstants;
 
 import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletResponse;
+
 import java.io.IOException;
 import java.util.HashMap;
 import java.util.List;
@@ -234,14 +235,18 @@ public class AwardHomeAction extends AwardAction {
             }
             Award oldAward = getAwardVersionService().getActiveAwardVersion(awardDocument.getAward().getAwardNumber());
             AwardAmountInfo aaiNew = awardDocument.getAward().getLastAwardAmountInfo();
-            if (oldAward != null) {
+            if (oldAward != null && oldAward.getLastAwardAmountInfo() != null) {
                 AwardAmountInfo aaiOld = oldAward.getLastAwardAmountInfo();
+                try {
                   aaiNew.setObligatedChange(aaiNew.getAmountObligatedToDate().subtract(aaiOld.getAmountObligatedToDate()));
                   aaiNew.setObligatedChangeDirect(aaiNew.getObligatedTotalDirect().subtract(aaiOld.getObligatedTotalDirect()));
                   aaiNew.setObligatedChangeIndirect(aaiNew.getObligatedTotalIndirect().subtract(aaiOld.getObligatedTotalIndirect()));
                   aaiNew.setAnticipatedChange(aaiNew.getAnticipatedTotalAmount().subtract(aaiOld.getAnticipatedTotalAmount()));
                   aaiNew.setAnticipatedChangeDirect(aaiNew.getAnticipatedTotalDirect().subtract(aaiOld.getAnticipatedTotalDirect()));
                   aaiNew.setAnticipatedChangeIndirect(aaiNew.getAnticipatedTotalIndirect().subtract(aaiOld.getAnticipatedTotalIndirect()));
+                } catch (NullPointerException e) {
+                  aaiNew.resetChangeValues();
+                }
             } else {
                 aaiNew.resetChangeValues();
             }
@@ -279,10 +284,19 @@ public class AwardHomeAction extends AwardAction {
         return forward;
     }
 
-    private void setTotalsOnAward(Award award) {
-        AwardAmountInfo aai = award.getLastAwardAmountInfo();
-        aai.setAmountObligatedToDate(aai.getObligatedTotalDirect().add(aai.getObligatedTotalIndirect()));
-        aai.setAnticipatedTotalAmount(aai.getAnticipatedTotalDirect().add(aai.getAnticipatedTotalIndirect()));
+    protected void setTotalsOnAward(final Award award) {
+        final AwardAmountInfo aai = award.getLastAwardAmountInfo();
+        if (aai == null) {
+            return;
+        }
+
+        final KualiDecimal obligatedDirectTotal     = aai.getObligatedTotalDirect() != null ? aai.getObligatedTotalDirect() : KualiDecimal.ZERO;
+        final KualiDecimal obligatedIndirectTotal   = aai.getObligatedTotalIndirect() != null ? aai.getObligatedTotalIndirect() : KualiDecimal.ZERO;
+        final KualiDecimal anticipatedDirectTotal   = aai.getAnticipatedTotalDirect() != null ? aai.getAnticipatedTotalDirect() : KualiDecimal.ZERO;
+        final KualiDecimal anticipatedIndirectTotal = aai.getAnticipatedTotalIndirect() != null ? aai.getAnticipatedTotalIndirect() : KualiDecimal.ZERO;
+
+        aai.setAmountObligatedToDate(obligatedDirectTotal.add(obligatedIndirectTotal));
+        aai.setAnticipatedTotalAmount(anticipatedDirectTotal.add(anticipatedIndirectTotal));
     }
     
     private void persistSpecialReviewProtocolFundingSourceLink(Award award, boolean isAwardProtocolLinkingEnabled) {
