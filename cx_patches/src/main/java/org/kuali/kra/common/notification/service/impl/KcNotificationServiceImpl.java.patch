diff --git a/src/main/java/org/kuali/kra/common/notification/service/impl/KcNotificationServiceImpl.java b/src/main/java/org/kuali/kra/common/notification/service/impl/KcNotificationServiceImpl.java
index 468723a..d27f91b 100644
--- a/coeus-impl/src/main/java/org/kuali/coeus/common/notification/impl/service/impl/KcNotificationServiceImpl.java
+++ b/coeus-impl/src/main/java/org/kuali/coeus/common/notification/impl/service/impl/KcNotificationServiceImpl.java
@@ -46,6 +46,7 @@ import org.kuali.kra.service.KcPersonService;
 import org.kuali.kra.service.RolodexService;
 import org.kuali.kra.util.EmailAttachment;
 import org.kuali.rice.core.api.datetime.DateTimeService;
+import org.kuali.rice.core.api.exception.RiceIllegalArgumentException;
 import org.kuali.rice.core.api.membership.MemberType;
 import org.kuali.rice.coreservice.framework.parameter.ParameterService;
 import org.kuali.rice.ken.api.notification.Notification;
@@ -465,10 +466,25 @@ public class KcNotificationServiceImpl implements KcNotificationService {
             Collection<String> roleMembers = roleManagementService.getRoleMemberPrincipalIds(roleNamespace, roleName, roleRecipient.getRoleQualifiers());
             for (String roleMember : roleMembers) {
                 NotificationRecipient.Builder recipient = NotificationRecipient.Builder.create();
+                try {
                     recipient.setRecipientId(getKcPersonService().getKcPersonByPersonId(roleMember).getUserName());
                     recipient.setRecipientType(MemberType.PRINCIPAL.getCode());
                     recipients.add(recipient);
                 }
+                catch (IllegalArgumentException e) {
+                    // Quietly ignore recipients that no longer exist - dur!
+
+                    // java.lang.IllegalArgumentException: the entity is null
+                    // at org.kuali.kra.bo.KcPerson.fromEntityAndPersonId(KcPerson.java:133)
+                    // at org.kuali.kra.service.impl.KcPersonServiceImpl.getKcPersonByPersonId(KcPersonServiceImpl.java:130)
+                    // at org.kuali.kra.common.notification.service.impl.KcNotificationServiceImpl.createRoleRecipients(KcNotificationServiceImpl.java:451)
+                    // at org.kuali.kra.common.notification.service.impl.KcNotificationServiceImpl.getRoleRecipients(KcNotificationServiceImpl.java:422)
+                    // at org.kuali.kra.common.notification.service.impl.KcNotificationServiceImpl.getNotificationRecipients(KcNotificationServiceImpl.java:334)
+                    // at org.kuali.kra.common.notification.service.impl.KcNotificationServiceImpl.fillinNotificationObject(KcNotificationServiceImpl.java:581)
+                    // at org.kuali.kra.common.notification.service.impl.KcNotificationServiceImpl.sendNotificationAndPersist(KcNotificationServiceImpl.java:596)
+                    // at org.kuali.kra.protocol.ProtocolActionBase.save(ProtocolActionBase.java:275)
+                }
+            }
         } 
         
         return recipients;
@@ -524,8 +540,16 @@ public class KcNotificationServiceImpl implements KcNotificationService {
         
         if (CollectionUtils.isNotEmpty(recipients)) {
             for (NotificationRecipient.Builder recipient : recipients) {
-                Entity entityInfo = 
-                    getIdentityService().getEntityByPrincipalName(recipient.getRecipientId());
+                Entity entityInfo = null;
+                try {
+                  final String principalName = recipient.getRecipientId();
+                  if (principalName != null && principalName.length() > 0) {
+                    entityInfo = getIdentityService().getEntityByPrincipalName(recipient.getRecipientId());
+                  }
+                } catch (RiceIllegalArgumentException e) {
+                  LOG.info("getRecipientEmailAddresses: Principal cannot be found: " + recipient.getRecipientId());
+                }
+                if (entityInfo != null) {
                   List<EntityTypeContactInfo> entityTypes = entityInfo.getEntityTypeContactInfos();
                   if (CollectionUtils.isNotEmpty(entityTypes)) {
                       for (EntityTypeContactInfo entityType : entityTypes) {
@@ -541,6 +565,7 @@ public class KcNotificationServiceImpl implements KcNotificationService {
                    }
                 }
             }
+        }
         
         return emailAddresses;
     }
